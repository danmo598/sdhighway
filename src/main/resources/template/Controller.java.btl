package ${package.Controller};


import org.springframework.web.bind.annotation.*;
import org.springframework.beans.factory.annotation.Autowired;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.highway.util.response.Page;

/**
 *   @description : ${entity} 控制器
 *   ---------------------------------
 *      @author ${author}
 *   @since ${date}
 */

@RestController
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
public class ${table.controllerName} {

    private final Logger logger = LoggerFactory.getLogger(${table.controllerName}.class);

    @Autowired
    public ${table.serviceName} ${table.entityPath}Service;

    /**
     * @description : 获取分页列表
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
    @GetMapping(value = "/get${entity}List")
    public Page<${entity}> get${entity}List(Integer pageNo,Integer pageSize) {
           return ${table.entityPath}Service.get${entity}(pageNo,pageSize);
    }

    /**
     * @description : 新增 ${entity}
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
    @PostMapping(value = "/insert${entity}")
    public Integer insert${entity}(@RequestBody ${entity} ${table.entityPath},Integer adminId) {
           return ${table.entityPath}Service.insert${entity}(${table.entityPath},adminId);
    }

    /**
     * @description : 删除${entity}
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
    @PostMapping(value = "/delete${entity}")
    public Integer delete${entity}(@RequestBody ${entity} ${table.entityPath},Integer adminId) {
            return ${table.entityPath}Service.delete${entity}(${table.entityPath},adminId);
    }

    /**
     * @description : 通过id更新${entity}
     * ---------------------------------
     * @author : ${author}
     * @since : Create in ${date}
     */
    @PostMapping(value = "/update${entity}")
    public Integer update${entity}(@RequestBody ${entity} ${table.entityPath},Integer adminId) {
            return ${table.entityPath}Service.update${entity}(${table.entityPath},adminId);
    }


}